version: '3.8'

services:
  user-service:
    build: ./core/user-service
    environment:
      - KEYCLOAK_URL=http://keycloak:8080
      - KEYCLOAK_REALM=testing
      - KEYCLOAK_CLIENT_ID=user-service
      - KEYCLOAK_CLIENT_SECRET=htI4J6p0jhh3mOInOlZv7yeeuQSRHdIx
      - KEYCLOAK_ADMIN_USER=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
    ports:
      - "8001:8001"
    depends_on:
      - db
      - keycloak

  post-service:
    build: ./core/post-service    
    ports:
      - "50051:50051"
    depends_on:
      - db_post

  proxy-service:
    build: ./core/api-gateway
    ports:
      - "8000:8000"
    depends_on:
      - user-service

  db:
    image: postgres:latest
    restart: always
    environment:
      POSTGRES_DB: users_db
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
  db_post:
      image: postgres:latest
      restart: always
      environment:
        POSTGRES_USER: user
        POSTGRES_PASSWORD: password
        POSTGRES_DB: posts_db
      ports:
        - "5433:5432"
  
  keycloak:
    image: quay.io/keycloak/keycloak:latest
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_PROXY_HEADERS: xforwarded
      KC_PROXY: edge
      KC_HOSTNAME: localhost
      KC_HTTP_ENABLED: "true"
    ports:
      - "8080:8080"
    command: ["start-dev", "--http-enabled=true"]

  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  broker:
    image: confluentinc/cp-kafka:7.5.0
    container_name: broker
    ports:
      - "9092:9092"
      - "29092:29092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    ports:
      - "8086:8080"
    depends_on:
      - broker
    environment:
      KAFKA_CLUSTERS_NAME: local
      KAFKA_CLUSTERS_BOOTSTRAPSERVERS: broker:29092
      DYNAMIC_CONFIG_ENABLED: 'true'

  clickhouse:
    image: clickhouse/clickhouse-service:latest
    container_name: clickhouse
    ports:
      - "8123:8123"
      - "9000:9000"
    volumes:
      - clickhouse_data:/var/lib/clickhouse
      - ./clickhouse/init.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      CLICKHOUSE_DB: stats
      CLICKHOUSE_USER: admin
      CLICKHOUSE_PASSWORD: admin
      CLICKHOUSE_DEFAULT_ACCESS_MANAGEMENT: 1
    healthcheck:
      test: ["CMD", "clickhouse-client", "--query", "SELECT 1"]
      interval: 5s
      timeout: 10s
      retries: 5

  stats-service:
    build: ./core/statistics-service
    container_name: statistics-service
    ports:
      - "50052:50052"
    environment:
      - CLICKHOUSE_DNS=clickhouse:9000
      - KAFKA_BROKERS=broker:29092
      - KAFKA_TOPIC=post_events
      - KAFKA_GROUP_ID=stats_group
    depends_on:
      - clickhouse
      - broker

volumes:
  clickhouse_data:
